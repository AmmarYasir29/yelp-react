[{"/home/ammar/Project/Yelp/client/src/index.tsx":"1","/home/ammar/Project/Yelp/client/src/App.tsx":"2","/home/ammar/Project/Yelp/client/src/components/Header.tsx":"3","/home/ammar/Project/Yelp/client/src/components/Restauran.tsx":"4","/home/ammar/Project/Yelp/client/src/storeState/Manage.tsx":"5","/home/ammar/Project/Yelp/client/src/components/Update.tsx":"6","/home/ammar/Project/Yelp/client/src/components/Detail.tsx":"7","/home/ammar/Project/Yelp/client/src/components/Review.tsx":"8","/home/ammar/Project/Yelp/client/src/components/AddReview.tsx":"9","/home/ammar/Project/Yelp/client/src/components/Start.tsx":"10"},{"size":196,"mtime":1610994636175,"results":"11","hashOfConfig":"12"},{"size":729,"mtime":1611392802304,"results":"13","hashOfConfig":"12"},{"size":2397,"mtime":1611393891441,"results":"14","hashOfConfig":"12"},{"size":3142,"mtime":1611429756630,"results":"15","hashOfConfig":"12"},{"size":280,"mtime":1611306347247,"results":"16","hashOfConfig":"12"},{"size":3357,"mtime":1611396437706,"results":"17","hashOfConfig":"12"},{"size":822,"mtime":1611430135250,"results":"18","hashOfConfig":"12"},{"size":1138,"mtime":1611429899484,"results":"19","hashOfConfig":"12"},{"size":4019,"mtime":1611425251572,"results":"20","hashOfConfig":"12"},{"size":307,"mtime":1611429870176,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"lb1pvh",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/ammar/Project/Yelp/client/src/index.tsx",[],["48","49"],"/home/ammar/Project/Yelp/client/src/App.tsx",["50"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Detail from \"./components/Detail\";\nimport Header from \"./components/Header\";\nimport Restaurant from \"./components/Restauran\";\nimport Update from \"./components/Update\";\nimport \"./style/App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Header />\n            <Restaurant />\n          </Route>\n          <Route path=\"/update/:id\">\n            <Update />\n          </Route>\n          <Route path=\"/detail/:id\">\n            <Detail />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/ammar/Project/Yelp/client/src/components/Header.tsx",[],"/home/ammar/Project/Yelp/client/src/components/Restauran.tsx",["51","52"],"import React, { useEffect } from \"react\";\nimport useStore from \"../storeState/Manage\";\nimport { useHistory } from \"react-router-dom\";\nimport { start } from \"repl\";\nimport Start from \"./Start\";\n\nconst Restauran = () => {\n  const { restaurant, setRestaurant } = useStore();\n  let History = useHistory();\n  useEffect(() => {\n    const warringHandel = async () => {\n      return await fetch(\"http://localhost:3000/v1/restaurants\")\n        .then((result) => result.json())\n        .then((res) => setRestaurant(res.data))\n        .catch((err) => console.log(err));\n    };\n    warringHandel();\n  }, []);\n\n  const handleDelete = (e: any, id: string) => {\n    e.stopPropagation();\n    let requestOptions: any = {\n      method: \"DELETE\",\n      redirect: \"follow\",\n    };\n    fetch(`http://localhost:3000/v1/Restaurants/${id}`, requestOptions)\n      .then((response) => response.text())\n      .then((result) => console.log(result))\n      .catch((error) => console.log(\"error\", error));\n\n    setRestaurant(restaurant.filter((ele: any) => ele.id !== id));\n  };\n  const Handleupdate = (e: any, id: any) => {\n    e.stopPropagation();\n    History.push(`/update/${id}`);\n  };\n  const handledetail = (id: any) => {\n    History.push(`/detail/${id}`);\n  };\n  return (\n    <div className=\"container mt-4\">\n      <table className=\"table table-dark table-hover\">\n        <thead className=\"table-primary\">\n          <tr className=\"link-dark\">\n            <th scope=\"col\">Restaurant</th>\n            <th scope=\"col\">Location</th>\n            <th scope=\"col\">Price Range</th>\n            <th scope=\"col\">Ratings</th>\n            <th scope=\"col\">Edit</th>\n            <th scope=\"col\">Delete</th>\n          </tr>\n        </thead>\n        <tbody>\n          {restaurant &&\n            restaurant.map((ele: any) => {\n              return (\n                <tr\n                  className=\"pt-2\"\n                  key={ele.id}\n                  onClick={() => handledetail(ele.id)}\n                >\n                  <th scope=\"row\">{ele.name} </th>\n                  <td>{ele.location} </td>\n                  <td style={{ color: \"green\" }}>{\"$\".repeat(ele.price)} </td>\n                  <td>\n                    <div className=\"text-warning\">\n                      <Start rating={ele.average_rating} />\n                      <span >({ele.count? ele.count :\"No Review\"})</span>\n                    </div>\n                  </td>\n                  <td>\n                    <button\n                      onClick={(e) => Handleupdate(e, ele.id)}\n                      type=\"button\"\n                      className=\"btn btn-warning\"\n                    >\n                      Update\n                    </button>\n                  </td>\n                  <td>\n                    <button\n                      onClick={(e) => handleDelete(e, ele.id)}\n                      type=\"button\"\n                      className=\"btn btn-danger\"\n                    >\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Restauran;\n","/home/ammar/Project/Yelp/client/src/storeState/Manage.tsx",[],"/home/ammar/Project/Yelp/client/src/components/Update.tsx",["53"],"import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport pic from \"../img/update.svg\";\n\nconst Update = () => {\n  const { id }: any = useParams();\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  useEffect(() => {\n    const myFetch = () => {\n      fetch(`http://localhost:3000/v1/onerestaurant/${id}`)\n        .then((response) => response.json())\n        .then((result) => {\n          setName(result.data[0].name);\n          setLocation(result.data[0].location);\n          setPrice(result.data[0].price);\n        })\n        .catch((error) => console.log(\"error\", error));\n    };\n    myFetch();\n  }, []);\n  const handleUpdate = () => {\n    let myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    let raw = JSON.stringify({ name, location, price });\n\n    let requestOptions: any = {\n      method: \"PUT\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\",\n    };\n\n    fetch(`http://localhost:3000/v1/editrestaurants/${id}`, requestOptions)\n      .then((response) => response.json())\n      .then((result: any) => {\n        result.status && setOpen(true);\n        setName(\" \");\n        setLocation(\" \");\n        setPrice(\" \");\n      })\n      .catch((error) => console.log(\"error\", error));\n  };\n  return (\n    <>\n      {open && (\n        <div className=\"alert alert-success\" role=\"alert\">\n          <h4>The Restaurant update- Refresh the page!</h4>\n        </div>\n      )}\n      <div className=\"container\">\n        <div className=\"card\">\n          <img\n            className=\"card-img-top\"\n            style={{ height: \"550px\", objectFit: \"cover\" }}\n            src={pic}\n            alt=\"img\"\n          />\n          <div className=\"card-body bg-secondary\">\n            <form action=\"\">\n              <div className=\"mb-3\">\n                <label className=\"form-label\" htmlFor=\"name\">\n                  Name\n                </label>\n                <input\n                  onChange={(e) => setName(e.target.value)}\n                  value={name}\n                  className=\"form-control\"\n                  type=\"text\"\n                  id=\"name\"\n                />\n              </div>\n\n              <div className=\"mb-3\">\n                <label className=\"form-label\" htmlFor=\"location\">\n                  Location\n                </label>\n                <input\n                  onChange={(e) => setLocation(e.target.value)}\n                  className=\"form-control\"\n                  type=\"text\"\n                  id=\"location\"\n                  value={location}\n                />\n              </div>\n\n              <div className=\"mb-3\">\n                <label className=\"form-label\" htmlFor=\"price\">\n                  Price\n                </label>\n                <input\n                  onChange={(e) => setPrice(e.target.value)}\n                  className=\"form-control\"\n                  type=\"text\"\n                  id=\"price\"\n                  value={price}\n                />\n              </div>\n            </form>\n            <button className=\"btn btn-primary\" onClick={handleUpdate}>\n              Update\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Update;\n","/home/ammar/Project/Yelp/client/src/components/Detail.tsx",["54"],"/home/ammar/Project/Yelp/client/src/components/Review.tsx",["55"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Start from \"./Start\";\nconst Review = () => {\n  const [review, setReview] = useState([]);\n  const { id }: any = useParams();\n  useEffect(() => {\n    const myFetch = () => {\n      fetch(`http://localhost:3000/v1/review/${id}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setReview(result.data.rows);\n        });\n    };\n    myFetch();\n  }, []);\n  return (\n    <div className=\"row row-col-3 mb-2 mt-3\">\n      {review.map((ele: any) => (\n        <div\n          key={ele.id}\n          className=\"card text-white bg-primary mb-3\"\n          style={{ maxWidth: \"30%\", marginRight: \"25px\" }}\n        >\n          <div className=\"card-header d-flex justify-content-between\">\n            <span>{ele.name}</span>\n            <span style={{ color: \"yellow\" }}>\n              <Start rating={ele.rating} />\n            </span>\n          </div>\n          <div className=\"card-body\">\n            <p className=\"card-text\">{ele.review}</p>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Review;\n","/home/ammar/Project/Yelp/client/src/components/AddReview.tsx",["56"],"import React, { useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nconst AddReview = () => {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [review, setReview] = useState(\"\");\n  const [rating, setRating] = useState(\"Price Range\");\n  const { id }: any = useParams();\n  const [open, setOpen] = useState(false);\n  const History = useHistory();\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    var raw = JSON.stringify({ email, name, review, address, rating });\n\n    var requestOptions: any = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\",\n    };\n\n    fetch(`http://localhost:3000/v1/review/${id}`, requestOptions)\n      .then((response) => response.json())\n      .then((result) => {\n        setEmail(\"\");\n        setName(\"\");\n        setReview(\"\");\n        setAddress(\"\");\n        setRating(\"\");\n        setOpen(true);\n      })\n      .catch((error) => console.log(\"error\", error));\n    // History.push(\"/\");\n    // History.push(window.location.pathname);\n  };\n  return (\n    <div>\n      {open && (\n        <div className=\"alert alert-info\" role=\"alert\">\n          A simple info alert—check it out!\n        </div>\n      )}\n      <form className=\"row g-3\">\n        <div className=\"col-md-6\">\n          <label htmlFor=\"inputEmail4\" className=\"form-label\">\n            Email\n          </label>\n          <input\n            value={email}\n            type=\"email\"\n            className=\"form-control\"\n            id=\"inputEmail4\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <div className=\"col-md-6\">\n          <label htmlFor=\"inputPassword4\" className=\"form-label\">\n            Name\n          </label>\n          <input\n            value={name}\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputPassword4\"\n            onChange={(e) => setName(e.target.value)}\n          />\n        </div>\n        <div className=\"col-6\">\n          <label htmlFor=\"inputAddress\" className=\"form-label\">\n            Your Address\n          </label>\n          <input\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n            type=\"text\"\n            className=\"form-control\"\n            id=\"inputAddress\"\n            placeholder=\"City State St\"\n          />\n        </div>\n        <div className=\"col-6\">\n          <label htmlFor=\"floatingSelect\" className=\"form-label\">\n            Rating the restaurant\n          </label>\n          <select\n            onChange={(e) => setRating(e.target.value)}\n            className=\"form-select\"\n            id=\"floatingSelect\"\n            aria-label=\"Floating label select example\"\n          >\n            <option disabled defaultValue=\"true\">\n              Price Range\n            </option>\n            <option value=\"1\">One</option>\n            <option value=\"2\">Two</option>\n            <option value=\"3\">Three</option>\n            <option value=\"4\">Four</option>\n            <option value=\"5\">Five</option>\n          </select>\n        </div>\n        <div className=\"col-md-12\">\n          <div className=\"form-floating\">\n            <textarea\n              value={review}\n              onChange={(e) => setReview(e.target.value)}\n              className=\"form-control\"\n              placeholder=\"Leave a comment here\"\n              id=\"floatingTextarea2\"\n              style={{ height: \"150px\" }}\n            ></textarea>\n            <label htmlFor=\"floatingTextarea2\">Comments</label>\n          </div>\n        </div>\n        <div className=\"col-12\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={(e) => handleSubmit(e)}\n          >\n            Add ReView\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AddReview;\n","/home/ammar/Project/Yelp/client/src/components/Start.tsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":50,"nodeType":"63","messageId":"64","endLine":2,"endColumn":54},{"ruleId":"61","severity":1,"message":"65","line":4,"column":10,"nodeType":"63","messageId":"64","endLine":4,"endColumn":15},{"ruleId":"66","severity":1,"message":"67","line":18,"column":6,"nodeType":"68","endLine":18,"endColumn":8,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"70","line":23,"column":6,"nodeType":"68","endLine":23,"endColumn":8,"suggestions":"71"},{"ruleId":"66","severity":1,"message":"70","line":17,"column":6,"nodeType":"68","endLine":17,"endColumn":8,"suggestions":"72"},{"ruleId":"66","severity":1,"message":"70","line":16,"column":6,"nodeType":"68","endLine":16,"endColumn":8,"suggestions":"73"},{"ruleId":"61","severity":1,"message":"74","line":12,"column":9,"nodeType":"63","messageId":"64","endLine":12,"endColumn":16},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'start' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setRestaurant'. Either include it or remove the dependency array.","ArrayExpression",["77"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["78"],["79"],["80"],"'History' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},{"desc":"83","fix":"85"},{"desc":"83","fix":"86"},"Update the dependencies array to be: [setRestaurant]",{"range":"87","text":"88"},"Update the dependencies array to be: [id]",{"range":"89","text":"90"},{"range":"91","text":"90"},{"range":"92","text":"90"},[592,594],"[setRestaurant]",[765,767],"[id]",[532,534],[471,473]]